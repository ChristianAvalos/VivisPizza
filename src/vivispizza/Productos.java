/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vivispizza;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.tools.ShellFunctions.input;
import metodos_sql.conexiondb;
import metodos_sql.metodos_sql;
import static vivispizza.login.texto;

/**
 *
 * @author chris
 */
public class Productos extends javax.swing.JFrame {

    /**
     * Creates new form Productos
     */
    private metodos_sql metodos = new metodos_sql();
    public Productos() {
        initComponents();
          setLocationRelativeTo(null);
          this.cmbtipo_prod.setModel(metodos.tipo_producto());
           actualizartabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnagregar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmbtipo_prod = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtdescripcion = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jProductos = new javax.swing.JTable();
        btnregresar = new javax.swing.JButton();
        btnbuscar = new javax.swing.JButton();
        lblCodigoProducto = new javax.swing.JLabel();
        txtCodigo_producto = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnEliminarTipo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Agregar Producto");
        setResizable(false);

        btnagregar.setText("Agregar");
        btnagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnagregarActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo de Producto");

        cmbtipo_prod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbtipo_prod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbtipo_prodActionPerformed(evt);
            }
        });

        jLabel2.setText("Detalle Producto");

        jProductos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        jProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jProductosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jProductos);

        btnregresar.setText("Regresar");
        btnregresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnregresarActionPerformed(evt);
            }
        });

        btnbuscar.setText("Buscar");
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });

        lblCodigoProducto.setText("Codigo Producto");

        txtCodigo_producto.setEditable(false);

        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo ");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEliminarTipo.setText("Eliminar");
        btnEliminarTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarTipoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnregresar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2))
                                        .addGap(37, 37, 37))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblCodigoProducto)
                                        .addGap(40, 40, 40)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCodigo_producto, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(txtdescripcion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbtipo_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnagregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnbuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(25, 25, 25)))
                        .addComponent(btnNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarTipo)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(cmbtipo_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevo)
                    .addComponent(btnEliminarTipo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtdescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoProducto)
                    .addComponent(txtCodigo_producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnbuscar)
                    .addComponent(btnagregar)
                    .addComponent(btnEliminar)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnregresar)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnregresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnregresarActionPerformed
        // TODO add your handling code here:
         Menu_principal ventana = new Menu_principal();
            ventana.labelusuario.setText(texto.toUpperCase());
                ventana.setVisible(true);
                this.dispose();
        
    }//GEN-LAST:event_btnregresarActionPerformed

    private void btnagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnagregarActionPerformed

        //Esto es para obtener la primera letra del tipo de producto
        String variable=null; 
        if (!"Seleccione tipo".equals(cmbtipo_prod.getItemAt(cmbtipo_prod.getSelectedIndex()))){
            variable=cmbtipo_prod.getItemAt(cmbtipo_prod.getSelectedIndex());   
        } else {
            JOptionPane.showMessageDialog(null,"Seleccione Tipo de Productos");
        }
                
       //Esta lineas son para obtener el numero para crear el codigo 
        int c=0;
        String id_producto;
        int id_tipo=-1;
        //id_producto=cmbtipo_prod.getSelectedIndex();
        id_producto=cmbtipo_prod.getItemAt(cmbtipo_prod.getSelectedIndex());
        String codigo=null;
         Connection conexion = null;
        
        //trae los valores del cmbobos tipo de producto
        try{
             conexion = conexiondb.getConexion();
           PreparedStatement ps = null;
            ResultSet rs = null;
             
            
            String sql = "SELECT IFNULL(MAX(cp.Numero),-1)as Numero,tp.id_producto FROM tipo_productos tp \n"
                    + "left join Cod_Producto cp on cp.id_tipo_prod =tp.id_producto \n"
                    + "Where tp.nombre= '"+id_producto+"'\n"
                    + "GROUP by tp.id_producto ";
             System.out.println(sql);
             ps = conexion.prepareStatement(sql);
             rs = ps.executeQuery();
        
            while (rs.next()){
                c=(rs.getInt("Numero"));
                id_tipo=(rs.getInt("id_producto"));
            }
            
           conexion.close();
           ps.close();
           rs.close();
         }catch(SQLException ex) {
            System.err.println(ex.toString());  
            
        }
        //Compara los resultados de la tabla y carga en el codigo producto
        if(!"Seleccione tipo".equals(cmbtipo_prod.getItemAt(cmbtipo_prod.getSelectedIndex()))){
            if(!"".equals(txtdescripcion.getText())){
                if (c==-1){
                    c=0;
                    codigo=variable.substring(0,2)+c;
                     int i = metodos.carga_codigo(c,id_tipo,codigo);  
                 }else{
                        c=c+1;
                        codigo=variable.substring(0,2)+c;
                        int i = metodos.carga_codigo(c,id_tipo,codigo);  
                     }
                   //inserta en la tabla detalle producto 
                   codigo=variable.substring(0,2)+c;
                   int i = metodos.detalle_producto(codigo,txtdescripcion.getText(),id_tipo);
                      if (i > 0) {
                        JOptionPane.showMessageDialog(this, "Datos guardados correctamente");
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo guardar los datos");
                       }
                
            }else{
              JOptionPane.showMessageDialog(this, "Cargue el Detalle del Tipo Producto");   
            }
        }

         this.cmbtipo_prod.setModel(metodos.tipo_producto());
         actualizartabla();
         txtdescripcion.setText("");
         txtCodigo_producto.setText("");
         
       
    
    }//GEN-LAST:event_btnagregarActionPerformed

    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
        Connection conexion = null;
        String campo = txtdescripcion.getText();
        String campo2 = cmbtipo_prod.getItemAt(cmbtipo_prod.getSelectedIndex());
                String where = "";
                if (!"".equals(campo)){
                    where = "WHERE dp.descripcion like ifnull ('"+"%"+campo+"%"+"',dp.descripcion) and tp.nombre like ifnull ('"+"%"+campo2+"%"+"',tp.nombre)";
                    
                }
        
        try{
            conexion = conexiondb.getConexion();
            DefaultTableModel modelo = new DefaultTableModel();
            jProductos.setModel(modelo);
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT dp.id_det_prod,dp.Codigo_producto,tp.Nombre,dp.descripcion FROM detalle_producto dp left join tipo_productos tp on dp.id_producto=tp.id_producto "+where+"ORDER by dp.id_producto";
            System.out.println(sql);
            ps = conexion.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            modelo.addColumn("Codigo");
            modelo.addColumn("Codigo Detalle");
            modelo.addColumn("Tipo de Producto");
            modelo.addColumn("Descripcion");
            int [] anchos = {25,25,50,100};
            for (int x = 0; x<cantidadColumnas; x++)
            {
                jProductos.getColumnModel().getColumn(x).setPreferredWidth(anchos[x]);
            }
            
            while (rs.next()){
                
                Object[] filas = new Object[cantidadColumnas];
                for(int i = 0;i<cantidadColumnas;i++){
                    filas[i]= rs.getObject(i+1);
               }
                modelo.addRow(filas);               
            }   
           
         conexion.close();
        } catch(SQLException ex) {
            System.err.println(ex.toString());
            
        }
          txtdescripcion.setText("");
          txtCodigo_producto.setText("");
          this.cmbtipo_prod.setModel(metodos.tipo_producto());
          
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void jProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProductosMouseClicked
            Connection conexion = null;
            PreparedStatement ps = null;
            ResultSet rs = null;
             try{
              conexion = conexiondb.getConexion();   
            
            int Fila = jProductos.getSelectedRow();
            String nombre = jProductos.getValueAt(Fila,0).toString();
            
            ps = conexion.prepareStatement("SELECT dp.id_det_prod,dp.Codigo_producto,tp.Nombre,dp.descripcion FROM detalle_producto dp left join tipo_productos tp on dp.id_producto=tp.id_producto WHERE dp.id_det_prod=?");
            ps.setString(1, nombre);
            rs = ps.executeQuery();
            while (rs.next()){
              //  txtdescripcion.setText(rs.getString("Nombre"));
              cmbtipo_prod.setSelectedItem(rs.getString("Nombre"));
              txtdescripcion.setText(rs.getString("Descripcion"));
              txtCodigo_producto.setText(rs.getString("Codigo_producto"));
              
                
               
                //cmbtipo_prod.
               // txtpassword.setText(rs.getString("Password"));
            }
              conexion.close();
             } catch (SQLException ex) {
                 System.out.println(ex.toString());
        }
       
        
        //una Forma de llenar los campos sin necesidad de script de sql
       /* int filaseleccionada=jProductos.rowAtPoint(evt.getPoint());
        txtdescripcion.setText(jProductos.getValueAt(filaseleccionada,3).toString());
        cmbtipo_prod.setSelectedItem(jProductos.getValueAt(filaseleccionada,2).toString());*/
        
        
        
    }//GEN-LAST:event_jProductosMouseClicked

    private void cmbtipo_prodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbtipo_prodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbtipo_prodActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
          Connection conexion = null;
          PreparedStatement ps = null;
          PreparedStatement ps2 = null;
          
          if ("".equals(txtdescripcion.getText())){
            JOptionPane.showMessageDialog(this, "Completar los campos por favor");  
              
          }else{
              if(cmbtipo_prod.getSelectedIndex()==0){
                JOptionPane.showMessageDialog(this, "Seleccione Tipo de Producto");   
                  
              }else{
  
             try{
                 conexion = conexiondb.getConexion();
            int Fila = jProductos.getSelectedRow();
            String nombre = jProductos.getValueAt(Fila,0).toString();
            String Codigo_Prod = jProductos.getValueAt(Fila,1).toString();
            ps = conexion.prepareStatement("DELETE FROM detalle_producto WHERE id_det_prod=?");
            ps2 = conexion.prepareStatement("DELETE FROM Cod_Producto WHERE Codigo_Producto=?");
            ps.setString(1, nombre);
            ps2.setString(1, Codigo_Prod);
            ps.execute();
            ps2.execute();
            JOptionPane.showMessageDialog(this, "Datos eliminados");
             txtdescripcion.setText("");
             this.cmbtipo_prod.setModel(metodos.tipo_producto());
             txtCodigo_producto.setText("");
            
             actualizartabla();
            /* Add_Supr_usuario el = new Add_Supr_usuario();
             el.setVisible(true);
             this.dispose();*/
            ps.close();
            ps2.close();
            conexion.close();
             } catch (SQLException ex) {
                 System.out.println(ex.toString());
                 

            }
             
          } 
         
        }
        
      
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       txtdescripcion.setText("");
        this.cmbtipo_prod.setModel(metodos.tipo_producto());
        txtCodigo_producto.setText("");
        actualizartabla();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        Nuevo_Tipo_Prod ventana = new Nuevo_Tipo_Prod();
        ventana.setVisible(true);
        this.dispose();
        
        
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEliminarTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarTipoActionPerformed
        Connection conexion = null;
        String Tipo_Producto;
        Tipo_Producto=cmbtipo_prod.getItemAt(cmbtipo_prod.getSelectedIndex());
        if(!"Seleccione tipo".equals(Tipo_Producto)){
                int R =JOptionPane.showConfirmDialog(this,"Estas seguro");
            if(R==0){
               PreparedStatement ps = null;
             try{
                 conexion = conexiondb.getConexion();
                 ps = conexion.prepareStatement("delete from tipo_productos WHERE nombre = '"+Tipo_Producto+"'");
                 ps.execute();
                 JOptionPane.showMessageDialog(this, "Datos eliminados");
                 this.cmbtipo_prod.setModel(metodos.tipo_producto());
                 conexion.close();
                 } catch (SQLException ex) {
                 System.out.println(ex.toString());
                 JOptionPane.showMessageDialog(this, "No se puedo eliminar");
                                           }
                     }
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione Tipo de Producto");       
    }
            
    }//GEN-LAST:event_btnEliminarTipoActionPerformed
     //Mostrar Jtable
       public  DefaultTableModel actualizartabla(){
             Connection conexion = null;       
                    try{
           conexion = conexiondb.getConexion();
           DefaultTableModel modelo = new DefaultTableModel();
           
           jProductos.setModel(modelo);
            PreparedStatement ps = null;
            ResultSet rs = null;
             
            String sql = "SELECT dp.id_det_prod,dp.Codigo_producto,tp.Nombre,dp.descripcion FROM detalle_producto dp left join tipo_productos tp on tp.id_producto=dp.id_producto ORDER by dp.id_producto ";
            System.out.println(sql);
            ps = conexion.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            modelo.addColumn("Codigo");
            modelo.addColumn("Codigo Detalle");
            modelo.addColumn("Tipo de Producto");
            modelo.addColumn("Descripcion");
            int [] anchos = {25,25,50,100};
            for (int x = 0; x<cantidadColumnas; x++)
            {
                jProductos.getColumnModel().getColumn(x).setPreferredWidth(anchos[x]);
            }
            
            while (rs.next()){
                
                Object[] filas = new Object[cantidadColumnas];
                for(int i = 0;i<cantidadColumnas;i++){
                    filas[i]= rs.getObject(i+1);
               }
                modelo.addRow(filas);               
            } 
            ps.close();
            rs.close();
            conexion.close();
        } catch(SQLException ex) {
            System.err.println(ex.toString());
        }         
        return null;
       }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Productos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarTipo;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnagregar;
    private javax.swing.JButton btnbuscar;
    private javax.swing.JButton btnregresar;
    private javax.swing.JComboBox<String> cmbtipo_prod;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTable jProductos;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCodigoProducto;
    private javax.swing.JTextField txtCodigo_producto;
    private javax.swing.JTextField txtdescripcion;
    // End of variables declaration//GEN-END:variables
}
